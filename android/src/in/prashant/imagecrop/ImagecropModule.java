/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package in.prashant.imagecrop;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.util.TiActivityResultHandler;
import org.appcelerator.titanium.util.TiActivitySupport;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;

import com.theartofdev.edmodo.cropper.CropImage;
import com.theartofdev.edmodo.cropper.CropImageView;



@SuppressWarnings("unused")
@Kroll.module(name="Imagecrop", id="in.prashant.imagecrop")
public class ImagecropModule extends KrollModule implements TiActivityResultHandler
{

	// Standard Debugging variables
	private static final String LCAT = "ImagecropModule";

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	private KrollFunction callback;

	
	public ImagecropModule() {
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(LCAT, "inside onAppCreate");
	}

	// Methods
	@Kroll.method
	public void crop(KrollDict options) {
		callback = (KrollFunction) options.get("callback");
		String path = (String) options.get("path");
		
//		Log.i(LCAT, "** Path = " + path);
		
		Activity activity = TiApplication.getAppCurrentActivity();
		
		TiActivitySupport actSupport = (TiActivitySupport) activity;

//		Intent intent = CropImage.activity().getIntent(activity);
//		actSupport.launchActivityForResult(intent, CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE, this);
//		CropImage.startPickImageActivity(TiApplication.getInstance().getApplicationContext());
		
		Intent intent = new Intent(activity, ImageDemo.class);
		activity.startActivity(intent);
		
		Log.i(LCAT, "5...");
	}

	@Override
	public void onError(Activity activity, int requestCode, Exception exc) {
		KrollDict callbackResult = new KrollDict();
        callbackResult.put("error", "Some error occured");
        callback.callAsync(getKrollObject(), callbackResult);
	}

	@Override
	public void onResult(Activity activity, int requestCode, int resultCode, Intent intent) {
		Log.i(LCAT, "Result Code = " + resultCode + " : Req Code = " + requestCode);
		
//		if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {
//            CropImage.ActivityResult result = CropImage.getActivityResult(intent);
//            
//            if (resultCode == Activity.RESULT_OK) {
//                Uri resultUri = result.getUri();
//                KrollDict callbackResult = new KrollDict();
//                callbackResult.put("imagePath", resultUri.getPath());
//                callback.callAsync(getKrollObject(), callbackResult);
//                
//                
//            } else if (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {
//                Exception error = result.getError();
//            }
//        }
	}
}

